"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ton_core_1 = require("ton-core");
const disassembler_1 = require("./disassembler");
const ton_compiler_1 = require("ton-compiler");
const ton_1 = require("ton");
const fs = __importStar(require("fs"));
function fetchCodeOrSnapshot(addr) {
    return __awaiter(this, void 0, void 0, function* () {
        const snapshotPath = __dirname + '/__snapshots__/' + addr + '.boc';
        if (fs.existsSync(snapshotPath)) {
            return fs.readFileSync(snapshotPath);
        }
        let client = new ton_1.TonClient({
            endpoint: 'https://scalable-api.tonwhales.com/jsonRPC'
        });
        let address = ton_core_1.Address.parseFriendly(addr).address;
        let state = yield client.getContractState(address);
        if (!state.code) {
            throw new Error('Code not found');
        }
        fs.writeFileSync(snapshotPath, state.code);
        return state.code;
    });
}
describe('disassembler', () => {
    beforeAll(() => {
        process.env.DEBUG = process.env.DEBUG + ',tvm-disassembler';
    });
    it('should disassemble config', () => __awaiter(void 0, void 0, void 0, function* () {
        let boc = yield fetchCodeOrSnapshot('Ef9VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVbxn');
        expect((0, disassembler_1.fromBoc)(boc)).toMatchSnapshot();
    }));
    it('should disassemble nft', () => __awaiter(void 0, void 0, void 0, function* () {
        let boc = yield fetchCodeOrSnapshot('EQBmG4YwsdGsUHG46rL-_GtGxsUrdmn-8Tau1DKkzQMNsGaW');
        expect((0, disassembler_1.fromBoc)(boc)).toMatchSnapshot();
    }));
    it('should dump method', () => __awaiter(void 0, void 0, void 0, function* () {
        let fiftCode = yield (0, ton_compiler_1.compileFunc)(`
            () main() {
    
            }
    
            () owner() method_id {
    
            }
        `);
        let code = yield (0, ton_compiler_1.compileFift)(fiftCode);
        let codeCell = ton_core_1.Cell.fromBoc(code)[0];
        expect((0, disassembler_1.fromCode)(codeCell)).toMatchSnapshot();
    }));
    it('should disassemble elector', () => __awaiter(void 0, void 0, void 0, function* () {
        // Ef8zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM0vF
        let boc = yield fetchCodeOrSnapshot('Ef8zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM0vF');
        expect((0, disassembler_1.fromBoc)(boc)).toMatchSnapshot();
    }));
    it('should disassemble contract', () => __awaiter(void 0, void 0, void 0, function* () {
        let boc = yield fetchCodeOrSnapshot('EQBRrTk63wHpvreMs7_cDKWh6zrYmQcSBOjKz1i6GcbRTLZX');
        expect((0, disassembler_1.fromBoc)(boc)).toMatchSnapshot();
    }));
    it('should disassemble #5', () => __awaiter(void 0, void 0, void 0, function* () {
        let boc = yield fetchCodeOrSnapshot('EQDSbgHX03B9_0cNBAMdlmhVbvhRNYhZNhTRH4wfNBmisKB5');
        expect((0, disassembler_1.fromBoc)(boc)).toMatchSnapshot();
    }));
});
//# sourceMappingURL=disassembler.spec.js.map