import { CompilerContext } from "../context";
export declare class WriterContext {
    #private;
    readonly ctx: CompilerContext;
    constructor(ctx: CompilerContext);
    allocateNextRandomName(): string;
    clone(): WriterContext;
    render(debug?: boolean): string;
    fun(name: string, handler: () => void): void;
    used(name: string): string;
    currentContext(): string | null;
    inIndent: (handler: () => void) => void;
    append(src?: string): void;
    write(src?: string): void;
    debug(id?: number | undefined | null | string): void;
    header(src: string): void;
    isRendered(key: string): boolean;
    markRendered(key: string): void;
}
